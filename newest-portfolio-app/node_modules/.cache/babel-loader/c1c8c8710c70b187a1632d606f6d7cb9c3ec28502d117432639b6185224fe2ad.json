{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Steven\\\\Desktop\\\\OFFICIAL_PROJECTS\\\\Portfolio-App\\\\Final-MyPortfolio\\\\Frontend\\\\newest-portfolio-app\\\\src\\\\Components\\\\Sections\\\\Projects\\\\ProjectSection.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProjectSection = () => {\n  _s();\n  const [projects, setProjects] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    axios.get('http://localhost:5000/api/projects/loadprojects') // Dev Endpoint\n    //.get('https://official-projects.onrender.com/api/projects/loadprojects') // Production Endpoint\n    .then(res => {\n      // If the request SUCCEEDS\n      setProjects(res.data); // Shove data into projects[]\n      setLoading(false); //  turn off the loading spinner\n    }).catch(() =>\n    // ðŸ’¥ If the request fails for any reasonâ€¦\n    setLoading(false) //    â€¢ still turn off the spinner (no infinite wait)\n    );\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \" View my projects below! \"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 12\n  }, this);\n};\n_s(ProjectSection, \"OQ1VoVBkBYQ0DtEeE9la9LZgEb0=\");\n_c = ProjectSection;\nexport default ProjectSection;\nvar _c;\n$RefreshReg$(_c, \"ProjectSection\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","ProjectSection","_s","projects","setProjects","loading","setLoading","get","then","res","data","catch","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Steven/Desktop/OFFICIAL_PROJECTS/Portfolio-App/Final-MyPortfolio/Frontend/newest-portfolio-app/src/Components/Sections/Projects/ProjectSection.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Image, Project } from \"./types/interfaces\"\r\n\r\nconst ProjectSection: React.FC = () => {\r\n    const [projects, setProjects] = useState<Project[]>([]);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        axios\r\n            .get('http://localhost:5000/api/projects/loadprojects') // Dev Endpoint\r\n            //.get('https://official-projects.onrender.com/api/projects/loadprojects') // Production Endpoint\r\n            .then(res => {                  // If the request SUCCEEDS\r\n                setProjects(res.data);                           // Shove data into projects[]\r\n                setLoading(false);                              //  turn off the loading spinner\r\n            })\r\n            .catch(() =>                                     // ðŸ’¥ If the request fails for any reasonâ€¦\r\n                setLoading(false)                              //    â€¢ still turn off the spinner (no infinite wait)\r\n            );\r\n\r\n    })\r\n\r\n\r\n\r\n    return <div> View my projects below! </div>\r\n\r\n\r\n\r\n}\r\n\r\nexport default ProjectSection;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG1B,MAAMC,cAAwB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAY,EAAE,CAAC;EACvD,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACZC,KAAK,CACAS,GAAG,CAAC,iDAAiD,CAAC,CAAC;IACxD;IAAA,CACCC,IAAI,CAACC,GAAG,IAAI;MAAmB;MAC5BL,WAAW,CAACK,GAAG,CAACC,IAAI,CAAC,CAAC,CAA2B;MACjDJ,UAAU,CAAC,KAAK,CAAC,CAAC,CAA8B;IACpD,CAAC,CAAC,CACDK,KAAK,CAAC;IAA0C;IAC7CL,UAAU,CAAC,KAAK,CAAC,CAA8B;IACnD,CAAC;EAET,CAAC,CAAC;EAIF,oBAAON,OAAA;IAAAY,QAAA,EAAK;EAAyB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAI/C,CAAC;AAAAd,EAAA,CAxBKD,cAAwB;AAAAgB,EAAA,GAAxBhB,cAAwB;AA0B9B,eAAeA,cAAc;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}